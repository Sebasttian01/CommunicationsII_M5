id: b_BERTool_ff
label: b_BERTool_ff
category: '[comdiguis]'

parameters:
-   id: EsN0max
    label: EsN0max
    dtype: raw
    default: '20'
    hide: none
-   id: EsN0min
    label: EsN0min
    dtype: raw
    default: '0'
    hide: none
-   id: N_snr
    label: N_snr
    dtype: raw
    default: '128'
    hide: none
-   id: Rs
    label: Rs
    dtype: raw
    default: '125'
    hide: none
-   id: Sps
    label: Sps
    dtype: real
    default: '1'
    hide: none

inputs:
-   label: in
    dtype: float
    vlen: 1
-   label: in_Tx
    dtype: byte
    vlen: 1
-   label: in_Rx
    dtype: byte
    vlen: 1

outputs:
-   label: out_env
    dtype: float
    vlen: 1
-   label: out
    dtype: float
    vlen: 128

templates:
    imports: 'from b_BERTool_ff import b_BERTool_ff  # grc-generated hier_block'
    make: "b_BERTool_ff(\n    EsN0max=${ EsN0max },\n    EsN0min=${ EsN0min },\n \
        \   N_snr=${ N_snr },\n    Rs=${ Rs },\n    Sps=${ Sps },\n)"
    callbacks:
    - set_EsN0max(${ EsN0max })
    - set_EsN0min(${ EsN0min })
    - set_N_snr(${ N_snr })
    - set_Rs(${ Rs })
    - set_Sps(${ Sps })

documentation: "Homero Ortega Boada\nEste Bloque sirve a la vez como canal de Ruido\
    \ Blanco Gausiano y como herramienta para calcular la curva de BER (Bit error\
    \ Rate) para una senal binaria real. Pero tambien se puede usar para se\xF1ales\
    \ M-arias reales como M-PAM. Se pueden usar se\xF1ales que han pasado por un filtroformador\
    \ de pulsos. En caso de que la entrada sea una se\xF1al binara, siempre que se\
    \ hable de simbolos es lo mismo que hablar de bits, es decir, los simbolos son\
    \ bits puros. Parametros usados: Sps - es el n\xFAmero muestras por simbolo, en\
    \ caso de no usar un filtro formador de pulsos Sps=1, recuerde que Sps=samp_reate/Sps;\
    \ Rs - es la rata de simbolos; N_snr - numero de puntos que tendra la curva de\
    \ BER; EsNomin: valor minimo de la relaci\xF3n Es/No; EsNomax: valor m\xE1ximo\
    \ de la relacion Es/No. Las se\xF1ales de entrada son: in Tx  para los  simbolos\
    \ transmitidos; in Rx  para los simbolos recibidos; in es la se\xF1al enviada.\
    \ La salida son dos senales: out - es la Curva de BER o SER a graficar;  out_env\
    \ - es la se\xF1al que sale del canal AWGN, que es la misma entrante pero con\
    \ ruido ; out que son los valores de BER o SER disponibles. IMPORTANTE: que la\
    \ curva sea BER o sea SER lo define el tipo de senal que se tiene en in Tx y en\
    \ in Rx, donde se tiene en cada caso una senal M-aria. Asi que si M=2, estamos\
    \ enviando y recibiendo simbolos, luego obtenemos curva de BER, pero si M>2 estamos\
    \ hablando de curva de SER.\n/home/comu2_grupoc1/.local/state/gnuradio/b_BERTool_ff.py"
grc_source: /home/comu2_grupoc1/CommunicationsII_M5/comdig_Lib_Bloques.3.8-master/b_BERTool_ff.grc

file_format: 1
