id: b_accum_cc
label: b_accum_cc
category: '[comdiguis]'

parameters:
-   id: M
    label: M
    dtype: int
    default: '0'
    hide: none
-   id: N
    label: N
    dtype: int
    default: '0'
    hide: none

inputs:
-   label: in
    dtype: complex
    vlen: 1

outputs:
-   label: out
    dtype: complex
    vlen: 1

templates:
    imports: 'from b_accum_cc import b_accum_cc  # grc-generated hier_block'
    make: "b_accum_cc(\n    M=${ M },\n    N=${ N },\n)"
    callbacks:
    - set_M(${ M })
    - set_N(${ N })

documentation: 'Homero Ortega Boada. Universidad Industrial de Santander

    Hace lo mismo que el acum, pero con senales complejas. Es un acumulador que se
    resetea cada N muestras. Arranca en la muestra M.

    /home/comu2_grupoc1/.local/state/gnuradio/b_accum_cc.py'
grc_source: /home/comu2_grupoc1/CommunicationsII_M5/comdig_Lib_Bloques.3.8-master/b_accum_cc.grc

file_format: 1
