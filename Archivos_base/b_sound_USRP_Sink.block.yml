id: b_sound_USRP_Sink
label: b_sound_USRP_Sink
category: '[comdiguis]'

parameters:
-   id: B
    label: Bandwidth (Hz)
    dtype: raw
    default: '2000'
    hide: none
-   id: Fc
    label: Center Freq (Hz)
    dtype: raw
    default: '4000'
    hide: none
-   id: Gain_dB
    label: Gain Value (dB)
    dtype: raw
    default: '0.'
    hide: none
-   id: samp_rate
    label: samp_rate (Hz)
    dtype: raw
    default: '2000'
    hide: none

inputs:
-   label: in
    dtype: complex
    vlen: 1

outputs:
-   label: pasobandas
    dtype: float
    vlen: 1
    optional: true
-   label: bandabase a 44100 muestras por simbolo
    dtype: complex
    vlen: 1
    optional: true

templates:
    imports: 'from b_sound_USRP_Sink import b_sound_USRP_Sink  # grc-generated hier_block'
    make: "b_sound_USRP_Sink(\n    B=${ B },\n    Fc=${ Fc },\n    Gain_dB=${ Gain_dB\
        \ },\n    samp_rate=${ samp_rate },\n)"
    callbacks:
    - set_B(${ B })
    - set_Fc(${ Fc })
    - set_Gain_dB(${ Gain_dB })
    - set_samp_rate(${ samp_rate })

documentation: 'Homero Ortega Boada. Universidad Industrial de Santander

    Es algo parecido a un USRP Source pero en vez de usar una antena, usa la bocina
    de sonido del computador, en un rango de frecuencias entre 0 Hz y  22500 Hz para
    explotar al maximo las capacidades de audio que usualmente tienen los computadores.
    Las salidas que este bloque tiene son opcionales, para pruebas, pues la verdadera
    salida es el sonido que sale por la bocina. Parametros usados: samp_rate (Hz)
    - es la frecuencia de muestreo de la senal que recibe nuestro bloque; Fc (Hz)
    - es la frecuencia de la portadora; Gain Value - es la ganancia en dB del amplificador
    interno; B (Hz) ancho de banda del canal pasobandas.

    /home/comu2_grupoc1/.local/state/gnuradio/b_sound_USRP_Sink.py'
grc_source: /home/comu2_grupoc1/CommunicationsII_M5/comdig_Lib_Bloques.3.8-master/BloquesDependientes/b_sound_USRP_Sink.grc

file_format: 1
